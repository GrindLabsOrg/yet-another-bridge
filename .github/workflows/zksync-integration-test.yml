name: ZKSync Integration Test
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  Test:
    runs-on: ubuntu-latest
    environment: Test

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '20.11.1'
          cache: 'npm'
          cache-dependency-path: '**/.github/workflows/*.yml'
      
      - name: npx test
        run: |
          npx zksync-cli --version

      # Run Dockerized L1-L2, goes first because it takes a lot of time
      - name: Setup Dockerized L1-L2
        run: |
          export ETHERSCAN_API_KEY=${{vars.ETHERSCAN_API_KEY}}
          echo startung dockerized setup
          git clone https://github.com/matter-labs/local-setup.git

          echo git cloned, starting:
          cd local-setup
          
          echo starting:
          touch ../docker_output.log
          ./start.sh &> ../docker_output.log &

      # Ethereum Setup
      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Install Forge
        run: |
          cd contracts/ethereum
          forge install
      
      # - name: Install Ethereum foundry
      #   run: |
      #     make install-ethereum-foundry

      # ZKSync Setup
      - name: Install ZKSync libraries
        run: |
          cd ./contracts/zksync/ && yarn install

      # Build Ethereum Contract
      - name: Build Ethereum Contract
        run: |
          make ethereum-build

      # Build ZKSync Contract
      - name: Build ZKSync Contract
        run: |
          make zksync-build

      # Run Dockerized L1-L2
      - name: Running integration test
        run: |
          export ETHERSCAN_API_KEY=${{vars.ETHERSCAN_API_KEY}}
          export TEST=true
          ls
          cat docker_output.log
          echo sleeping 250 to wait for ./start to setup
          sleep 250
          cat docker_output.log

          export ZKSYNC_DIAMOND_PROXY_ADDRESS=$(cat docker_output.log | sed -n 's/.*CONTRACTS_DIAMOND_PROXY_ADDR=\(0x[a-fA-F0-9]*\).*/\1/p')
          echo stored ZKSYNC_DIAMOND_PROXY_ADDRESS variable:
          echo $ZKSYNC_DIAMOND_PROXY_ADDRESS

          echo running make-test-integration-ci
          make zksync-test-integration-ci

      

# sleep 200
# echo catting log
# cat docker_output.log
# echo catting sed:
# cat docker_output.log | sed -n 's/.*CONTRACTS_DIAMOND_PROXY_ADDR=\(0x[a-fA-F0-9]*\).*/\1/p'
# export ZKSYNC_DIAMOND_PROXY_ADDRESS=$(cat docker_output.log | sed -n 's/.*CONTRACTS_DIAMOND_PROXY_ADDR=\(0x[a-fA-F0-9]*\).*/\1/p')
# echo after cat docker_output 
# echo $ZKSYNC_DIAMOND_PROXY_ADDRESS