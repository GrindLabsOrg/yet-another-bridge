name: Integration Test
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: postgres_db # optional (defaults to `postgres`)
          POSTGRES_PASSWORD: postgres_password # required
          POSTGRES_PORT: 5432 # optional (defaults to `5432`)
          POSTGRES_USER: postgres_user # optional (defaults to `postgres`)
          # `POSTGRES_HOST` is `localhost`
        ports:
          - 5432:5432 # maps tcp port 5432 on service container to the host
        options: >- # set health checks to wait until postgres has started 
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.10
          architecture: x64

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r mm-bot/requirements.txt

      - name: Install PSQL
        run: |
          apt-get update
          apt-get install --yes postgresql-client

      - name: Create tables
        run: |
          psql -h localhost -d postgres_db -U postgres_user -f mm-bot/resources/schema.sql
            psql -h localhost -d postgres_db -U postgres_user -c "SELECT * FROM block;"
        env:
          PGPASSWORD: postgres_password

      - name: Install scarb
        uses: software-mansion/setup-scarb@v1
        with:
          scarb-version: "0.7.0"

      - name: Install starkliup
        run: curl https://get.starkli.sh | sh

      - name: Install Starkli
        run: |
          /home/runner/.config/.starkli/bin/starkliup --version 0.1.20
          sudo mv /home/runner/.config/.starkli/bin/starkli /usr/local/bin/

      - name: Setup Katana .env
        run: |
          cp .github/workflows/katana/katana.env .env

      - name: Download Katana
        run: |
          wget https://github.com/dojoengine/dojo/releases/download/v0.3.1/dojo_v0.3.1_linux_amd64.tar.gz
          tar -xzvf dojo_v0.3.1_linux_amd64.tar.gz
          rm sozo torii dojo-language-server
